-- Foreign key  (외래키 , 참조키)
-- primary_column 테이블의 id column을 참조하는 자식테이블 생성

--column단위 제약사항
CREATE TABLE FOREIGN_COLUMN(
F_ID VARCHAR2(20) CONSTRAINT FK_F_ID REFERENCES PRIMARY_COLUMN(id),
EMAIL VARCHAR2(50),
AGE NUMBER(3),
INPUT_DATE DATE
);

SELECT * FROM USER_CONSTRAINTS;

--table 단위 제약사항
--primary_table의 ssn column을 참조 키 설정
CREATE TABLE FOREIGN_TABLE(
SSN CHAR(14),
AGE NUMBER(3),
CONSTRAINT FK_SSN FOREIGN KEY(SSN) REFERENCES PRIMARY_TABLE(SSN)
);

SELECT * FROM USER_CONSTRAINTS
WHERE TABLE_NAME = 'FOREIGN_TABLE';

INSERT INTO PRIMARY_COLUMN(NAME,ID,ADDR) VALUES ('이우길','LEE','서울시');
INSERT INTO PRIMARY_COLUMN(NAME,ID,ADDR) VALUES ('김우길','KIM','서울시');
COMMIT;
--추가
--추가성공
--부모테이블에 존재하는 값으로 column값을 추가할 때.
INSERT INTO FOREIGN_COLUMN(F_ID,EMAIL,AGE,INPUT_DATE)
VALUES
('LEE','lee@test.com',25,SYSDATE);

INSERT INTO FOREIGN_COLUMN(F_ID,EMAIL,AGE,INPUT_DATE)
VALUES
('','lee@test.com',25,SYSDATE);

INSERT INTO FOREIGN_COLUMN(F_ID,EMAIL,AGE,INPUT_DATE)
VALUES
('LEE','lee2@test.com',25,SYSDATE);

SELECT * FROM FOREIGN_COLUMN;


commit;

--실패
--부모테이블에 존재하지 않는 값으로 추가할 때.
INSERT INTO FOREIGN_COLUMN(F_ID,EMAIL,AGE,INPUT_DATE)
VALUES
('ERROR','lee@test.com',25,SYSDATE);
